AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for ECS service'

Parameters:
  Environment:
    Description: The deployment environment
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod
  
  VpcId:
    Description: The ID of the VPC
    Type: AWS::EC2::VPC::Id
    
  PublicSubnet1:
    Description: The ID of the first public subnet
    Type: AWS::EC2::Subnet::Id
    
  PublicSubnet2:
    Description: The ID of the second public subnet
    Type: AWS::EC2::Subnet::Id
    
  RepositoryURI:
    Description: The URI of the ECR repository
    Type: String
    
  ContainerImage:
    Description: The container image to deploy
    Type: String
    Default: latest
    
  ContainerPort:
    Description: The port on which the container listens
    Type: Number
    Default: 3000
    
  DesiredCount:
    Description: The number of tasks to run
    Type: Number
    Default: 1

Resources:
  # ECS Cluster
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${AWS::StackName}-cluster
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # Task Execution Role
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # Task Role
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonIVSFullAccess
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # Security Group
  ServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for IVS Streaming Service
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref ContainerPort
          ToPort: !Ref ContainerPort
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-service-sg
        - Key: Environment
          Value: !Ref Environment

  # Load Balancer
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${AWS::StackName}-alb
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups:
        - !GetAtt ServiceSecurityGroup.GroupId
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # Load Balancer Target Group
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${AWS::StackName}-tg
      Port: !Ref ContainerPort
      Protocol: HTTP
      VpcId: !Ref VpcId
      HealthCheckPath: /
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 5
      TargetType: ip
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # Load Balancer Listener
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  # Task Definition
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${AWS::StackName}-task
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      TaskRoleArn: !GetAtt TaskRole.Arn
      ContainerDefinitions:
        - Name: ivs-streaming-container
          Image: !Sub ${RepositoryURI}:${ContainerImage}
          Essential: true
          PortMappings:
            - ContainerPort: !Ref ContainerPort
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Environment:
            - Name: AWS_REGION
              Value: !Ref AWS::Region
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # Log Group
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/${AWS::StackName}
      RetentionInDays: 30
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # ECS Service
  Service:
    Type: AWS::ECS::Service
    DependsOn: Listener
    Properties:
      ServiceName: !Sub ${AWS::StackName}-service
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: !Ref DesiredCount
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref PublicSubnet1
            - !Ref PublicSubnet2
          SecurityGroups:
            - !GetAtt ServiceSecurityGroup.GroupId
      LoadBalancers:
        - TargetGroupArn: !Ref TargetGroup
          ContainerName: ivs-streaming-container
          ContainerPort: !Ref ContainerPort
      Tags:
        - Key: Environment
          Value: !Ref Environment

Outputs:
  ClusterName:
    Description: The name of the ECS cluster
    Value: !Ref ECSCluster
    Export:
      Name: !Sub ${AWS::StackName}-ClusterName

  ServiceName:
    Description: The name of the ECS service
    Value: !GetAtt Service.Name
    Export:
      Name: !Sub ${AWS::StackName}-ServiceName

  ServiceURL:
    Description: The URL for accessing the service
    Value: !Sub http://${LoadBalancer.DNSName}
    Export:
      Name: !Sub ${AWS::StackName}-ServiceURL